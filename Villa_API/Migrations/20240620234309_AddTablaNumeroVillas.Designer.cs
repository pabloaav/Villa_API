// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Villa_API.Store;

#nullable disable

namespace Villa_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240620234309_AddTablaNumeroVillas")]
    partial class AddTablaNumeroVillas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Villa_API.Models.NumeroVilla", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetalleEspecial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaId");

                    b.ToTable("NumeroVillas");
                });

            modelBuilder.Entity("Villa_API.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetrosCuadrados")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("int");

                    b.Property<double>("Tarifa")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Amenidad = "Piscina, Wi-Fi, Aire acondicionado",
                            Created_at = new DateTime(2024, 6, 20, 20, 43, 9, 103, DateTimeKind.Local).AddTicks(284),
                            Detalle = "Una hermosa villa con vista al mar",
                            ImagenUrl = "http://ejemplo.com/imagen.jpg",
                            MetrosCuadrados = 150,
                            Name = "Villa Maravilla",
                            Ocupantes = 4,
                            Tarifa = 300.5,
                            Updated_at = new DateTime(2024, 6, 20, 20, 43, 9, 103, DateTimeKind.Local).AddTicks(325)
                        },
                        new
                        {
                            Id = 12,
                            Amenidad = "Jacuzzi, Sauna, Gimnasio, Wi-Fi",
                            Created_at = new DateTime(2024, 6, 20, 20, 43, 9, 103, DateTimeKind.Local).AddTicks(328),
                            Detalle = "Un retiro tranquilo con acceso privado a la playa",
                            ImagenUrl = "http://ejemplo.com/villa-solyplaya.jpg",
                            MetrosCuadrados = 200,
                            Name = "Villa Sol y Playa",
                            Ocupantes = 6,
                            Tarifa = 450.75,
                            Updated_at = new DateTime(2024, 6, 20, 20, 43, 9, 103, DateTimeKind.Local).AddTicks(329)
                        });
                });

            modelBuilder.Entity("Villa_API.Models.NumeroVilla", b =>
                {
                    b.HasOne("Villa_API.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
